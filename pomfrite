#! /usr/bin/ruby

#
# Example:
# ./pomfrite -p loway-tpf -v 123 -j slf4j-api-1.7.5.jar -r repo
#

require 'json'
require 'pp'
require 'erb'
require 'optparse'

version = nil
project = nil
jarfile = nil
reporoot = "."

def splitref( gradlestyle )

	pomref = { 
		"grp"=> "?",
		"art"=> "?",
		"ver"=> "?"
	}

	if ( gradlestyle =~ /^(.+?):(.+?):(.+?)$/) then

		pomref["grp"] = $1
		pomref["art"] = $2
		pomref["ver"] = $3
	end

	pomref
end

#
#
#
 
optparse = OptionParser.new do|opts|   
	# Set a banner, displayed at the top   
	# of the help screen.   
	opts.banner = "Usage: optparse1.rb [options] file1 file2 ..."    

	# Define the options, and what they do   
	opts.on( '-j', '--jarfile F', '...' ) do |f|
		jarfile = f
	end

	opts.on( '-v', '--version F', '...' ) do |f|
		version = f
	end

	opts.on( '-p', '--project F', '...' ) do |f|
		project = f
	end

	opts.on( '-r', '--root F', '...' ) do |f|
		reporoot = f
	end
end

optparse.parse!

puts "Jar: #{jarfile} Project: #{project} Version: #{version} Reporoot: #{reporoot}"



json = File.read("./recipes/#{project}.json")
cfg = JSON.parse(json)

groupdir = cfg['group'].gsub('.','/')

jarfolder = "#{reporoot}/#{groupdir}/#{cfg['artifact']}/#{version}"
artiver = "#{cfg['artifact']}-#{version}"
newjar = "#{jarfolder}/#{artiver}.jar"
newpom = "#{jarfolder}/#{artiver}.pom"


#pp cfg
puts "Copy to: #{newjar} in #{jarfolder}"


# create folder
%x[ mkdir -p #{jarfolder} ]
%x[ cp #{jarfile} #{newjar} ]


template = File.new("./pom_sample.erb").read
renderer = ERB.new(template)
File.open( newpom, 'w') { |file| 
	file.write(renderer.result()) 
}



